<Application x:Class="RustRBLootEditor.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:local="clr-namespace:RustRBLootEditor" xmlns:Converters="clr-namespace:RustRBLootEditor.Converters"
             StartupUri="MainWindow.xaml">
    <Application.Resources>
        <Converters:CaseConverter x:Key="CaseConverterToUpper" Case="Upper"/>
        <Converters:CaseConverter x:Key="CaseConverterToLower" Case="Lower"/>
        <Converters:UriFromShortnameConverter x:Key="UriFromShortnameConverter"/>
        <Converters:LocalUriFromShortnameConverter x:Key="LocalUriFromShortnameConverter"/>
        <Converters:RelativeUriFromShortnameConverter x:Key="RelativeUriFromShortnameConverter"/>
        <Converters:FormatNumberConverter x:Key="FormatNumberConverter"/>
        <Converters:BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <Converters:RelativeUriFromLootItemConverter x:Key="RelativeUriFromLootItemConverter"/>
        <Converters:RelativeUriFromLootItemMultiConverter x:Key="RelativeUriFromLootItemMultiConverter"/>

        <Style TargetType="{x:Type TextBlock}">
            <Setter Property="FontFamily" Value="Lato Bold"/>
        </Style>
        
        <Style TargetType="{x:Type TextBox}">
            <Setter Property="Foreground" Value="Black"/>
            <Setter Property="FontSize" Value="14"/>
            <Setter Property="Padding" Value="3,2"/>
            <Setter Property="FontFamily" Value="Lato Bold"/>
            <Setter Property="Background" Value="#E5FFFFFF"/>
            <Setter Property="BorderThickness" Value="3"/>
            <Setter Property="BorderBrush" Value="#33000000"/>
        </Style>

        <Style TargetType="{x:Type ListBoxItem}" x:Key="inventoryItemStyle">
            <Setter Property="Background" Value="Transparent" />
            <!--<Setter Property="Focusable" Value="False" />-->
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="Margin" Value="0" />
            <Setter Property="Padding" Value="0" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="Background" Value="White" />
                    <Setter Property="BorderBrush" Value="White" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type Grid}" x:Key="inventoryItemGridStyle">
            <Setter Property="Background" Value="#33BDBDBD" />
            <Setter Property="Width" Value="75" />
            <Setter Property="Height" Value="75" />
            <Setter Property="Margin" Value="2" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem}, Path=IsMouseOver}" Value="True">
                    <Setter Property="Background" Value="#33BDBDBD" />
                    <Setter Property="Margin" Value="1"/>
                    <Setter Property="Width" Value="77" />
                    <Setter Property="Height" Value="77" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="{x:Type Grid}" x:Key="inventoryItemGridStyleGreen">
            <Setter Property="Background" Value="#33BDBDBD" />
            <Setter Property="Width" Value="75" />
            <Setter Property="Height" Value="75" />
            <Setter Property="Margin" Value="2" />
            <Style.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType=ListBoxItem}, Path=IsMouseOver}" Value="True">
                    <Setter Property="Background" Value="#33BDBDBD" />
                    <Setter Property="Margin" Value="1"/>
                    <Setter Property="Width" Value="77" />
                    <Setter Property="Height" Value="77" />
                </DataTrigger>
            </Style.Triggers>
        </Style>
        
        <SolidColorBrush x:Key="BrushOrange" Color="#ff5e3a"/>
        <SolidColorBrush x:Key="BrushGrey" Color="#f2f2f0"/>

        <Style x:Key="LinkButton" TargetType="Button">
            <Setter Property="FontStyle" Value="Italic"/>
            <Setter Property="Cursor" Value="Hand"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <TextBlock><ContentPresenter /></TextBlock>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
            <Setter Property="Foreground" Value="{StaticResource BrushOrange}" />
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="true">
                    <Setter Property="Foreground" Value="{StaticResource BrushGrey}" />
                </Trigger>
            </Style.Triggers>
        </Style>

        <Style TargetType="Expander" x:Key="inventoryItemExpanderStyle">
            <Setter Property="Padding" Value="0" />
            <Setter Property="BorderThickness" Value="0" />
            <Setter Property="IsExpanded" Value="True" />
            <Setter Property="Margin" Value="0,0,0,20" />
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Expander" x:Name="exp">
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Name="ContentRow" Height="0"/>
                            </Grid.RowDefinitions>
                            <Border Name="border" Grid.Row="0" Background="{TemplateBinding Background}" BorderThickness="0" CornerRadius="0" >
                                <Grid Background="#33BDBDBD">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="0" />
                                    </Grid.ColumnDefinitions>
                                    <!--<ToggleButton x:Name="tb" FontFamily="Marlett" FontSize="9.75" Height="5" Grid.Column="1" 
                                                                                                  IsChecked="{Binding Path=IsExpanded,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}" />-->
                                    <ContentPresenter x:Name="HeaderContent" Grid.Column="0" Margin="0" ContentSource="Header" RecognizesAccessKey="True" />
                                </Grid>
                            </Border>
                            <Border x:Name="Content" Grid.Row="1" BorderThickness="0" CornerRadius="0" >
                                <ContentPresenter Margin="0,4" />
                            </Border>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsExpanded" Value="True">
                                <Setter TargetName="ContentRow" Property="Height" Value="{Binding ElementName=Content,Path=Height}" />
                                <!--<Setter Property="Content" TargetName="tb" Value="t"></Setter>-->
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="ItemsGroupItem" TargetType="{x:Type GroupItem}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Expander Style="{StaticResource inventoryItemExpanderStyle}" Header="{Binding Name}">
                            <Expander.HeaderTemplate>
                                <DataTemplate>
                                    <Grid  Margin="0,0,0,3" HorizontalAlignment="{Binding Path=HorizontalAlignment, RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContentPresenter}}, Mode=OneWayToSource}" >
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition   />
                                            <ColumnDefinition  Width="Auto"/>
                                            <ColumnDefinition  Width="64"/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock FontWeight="Bold" Margin="10,7,5,2" FontSize="14" Text="{Binding Converter={StaticResource CaseConverterToUpper}}" Foreground="White" />
                                    </Grid>
                                </DataTemplate>
                            </Expander.HeaderTemplate>
                            <ItemsPresenter/>
                        </Expander>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Application.Resources>
</Application>
